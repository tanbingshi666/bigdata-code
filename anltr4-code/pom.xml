<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>bigdata-code</artifactId>
    <groupId>com.bigdata</groupId>
    <version>1.0.0</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>anltr4-code</artifactId>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- ANTLR 4 从4.10 版本后最低要求的JDK版本升到了11，所以如果还想在JDK8下运行行ANTLR4可以只能使用4.9.3 -->
    <antlr4.vesion>4.13.2</antlr4.vesion>
    <!-- 定义antlr4插件输出生成代码的位置-->
    <antlr4.dir>${project.build.directory}/generated-sources/antlr4</antlr4.dir>
    <!-- 如果希望将antlr4生成的代码加入git版本控制, 就不能将antlr4.dir定义在${project.build.directory}文件夹下，如下定义在src文件夹中  -->
    <!--<antlr4.dir>${basedir}/src/antlr4/java</antlr4.dir>-->
    <!-- surefire 插件 跳过测试 -->
    <skipTests>true</skipTests>
  </properties>
  <dependencies>
    <!-- 增加antlr4 运行时库依赖(包含了 antlr4-runtime 依赖) -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <version>${antlr4.vesion}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- 	执行插件 antlr4:antlr4,根据语法文件(.g4)生成解析器(java)代码
          完整说明参见 antlr4-maven-plugin 官方文档：
          https://www.antlr.org/api/maven-plugin/latest/plugin-info.html
          也可以命令行执行 mvn antlr4:help -Ddetail=true -Dgoal=antlr4 查看在线说明
      -->
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${antlr4.vesion}</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr4</goal>
            </goals>
            <configuration>
              <arguments>
                <!-- 命令行参数 -package ${package} 定义生成java代码的包名-->
                <argument>-package</argument>
                <argument>com.bigdata.antlr4.parser</argument>
                <!-- 输出生成的Java源码文件位置 这里的输出文件夹定义一定要与上面 -package 定义的包名匹配 -->
                <argument>-o</argument>
                <argument>${antlr4.dir}/com/bigdata/antlr4/parser</argument>
              </arguments>
              <!-- 指定语法文件的编码方式,默认utf-8 -->
              <!--<inputEncoding>utf-8</inputEncoding>-->
              <!-- ANTLR 语法文件(.g4) 所在位置-->
              <sourceDirectory>${basedir}/src/main/java/com/bigdata/antlr4/parser</sourceDirectory>
              <!-- 生成语法树侦听器(Listener)代码,默认为true -->
              <listener>true</listener>
              <!-- 生成语法树访问器(Visitor)代码,默认为false-->
              <visitor>true</visitor>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>